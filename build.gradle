buildscript {
    ext.kotlin_version = '1.6.21'
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'
apply plugin: 'org.spongepowered.mixin'

version project.modVersion
group project.modGroup

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/oyvey_at.cfg')
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

configurations {
    dependLibs
}

dependencies {
    minecraft "net.minecraftforge:forge:$forgeVersion"

    dependLibs group: "com.googlecode.json-simple", name: "json-simple", version: "1.1.1"

    annotationProcessor('org.spongepowered:mixin:0.8.5:processor') {
        exclude module: 'gson'
    }

    dependLibs('org.spongepowered:mixin:0.7.8-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    dependLibs "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation configurations.dependLibs
}

mixin {
    defaultObfuscationEnv 'searge'
    add sourceSets.main, 'mixins.oyvey.refmap.json'
}

processResources {
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.oyvey.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'chad.phobos.asm.MixinLoader',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'oyvey_at.cfg'
        )
    }

    from {
        configurations.dependLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}